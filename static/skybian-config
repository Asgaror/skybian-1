#!/bin/bash

# This script has the duty of configure the skybian OS with network 
# parameters and skywire settings on boot time from uSD or config file
#
# Crafted by skycoin/simelo team

# A note about lower uSD space, or where we can put the info
# The lower 4 Mb of the uSD is the boot region from 0x0 - 0x400000 bytes
# in 512 bytes sector that is 0 to 8192.
#
# Actual data resides from 0x0 to about 0x93670 (~600 Kb)
# so we will put out data on from the 3,5 Mb mark and forward
# exact address is byte 0x380000 / 3670016 and with a maximum
# lenght of 256 bytes.

# So we have this vars for that
DATASTART=3670016
DATASIZE=256

# extract uSD config and put it on the /etc/skybian.conf file
function extract_config() {
	# read from DATASTART only DATASIZE bytes
	dd if=/dev/mmcblk0 of=/tmp/extracted skip=$DATASTART bs=1 count=$DATASIZE

	# clean the data, the data is printable, so strings must work
	strings /tmp/extracted > /tmp/clean

	# if not empty, then it has out data
	if [ -s /tmp/clean ] ; then
		# but is the data usefull?
		local DATA=`cat /tmp/clean`
		local flag=""

		# loop to check if all parameters are there
		for section in IP GW DNS MODE MIP ; do
			# check it
			local test=`cat $DATA | grep $section`
			if [-z "$test" ] ; then
				#  oops! there is a parameter missing
				flag="true"
				return
			fi
		done

		# check if flag has been raised
		if [ -z "$flag" ] ; then
			# flag not raised, so data has all needed values
			# then copy the config
			cp -f /tmp/clean /etc/skybian.conf
		fi
	fi
}

# extract config from uSD raw space
extract_config

# At this point if we don't detected a default config on the uSD
# raw space we will use the default one.
# aka, if not found keep the default on the fs:
#   manager + node on 192.168.0.2

# load config
. /etc/skybian.conf


# function to check if the configured net is there and if the IP is set
function check_net() {
    # this return true if network is set and same
    # or false if net is not configured or with different ip
    local SKYNET=`nmcli con show | grep skynet`
    if [ -n "$SKYNET" ] ; then
        # skynet is there, test the IP
        local SKYIP=`nmcli con show skynet | grep IP4.ADDRESS | awk '{ print $2 }'`

	    # test it
        if [ "$SKYIP" == "$IP/24" ] ; then
            # same ip
            echo 1
        else
            # diff ip
            echo 0
        fi
    else
        # no skynet network
        echo 0

		# no skynet connection, so need to clean the default one
        # erase the default created connection in NM for the eth0 interface
        nmcli con delete "Wired connection 1" &> /dev/null
    fi
}


# checking if config is ok.
NETOK=`check_net`
if [ "$NETOK" == "1" ] ; then
	# same net
	echo "Net already configured..."
else
	# not configured or different
	echo "Not configured or different, fixing that"

	# erasing it by force, with no complain
	nmcli con delete skynet &> /dev/null

	# setting it up
	nmcli con add con-name skynet ifname eth0 type ethernet ip4 $IP/24 gw4 $GW
	nmcli con mod skynet ipv4.dns "$DNS"
fi


# path to skywire config scripts
SKYWIRE_UNIX_SCRIPTS=/usr/local/skywire/go/src/github.com/skycoin/skywire/static/script


# check for the env vars
if [ ! -f /etc/default/skywire ] ; then
	# does not exist, link it
	ln -s ${SKYWIRE_UNIX_SCRIPTS}/skywire.defaults /etc/default/skywire
else
	# check it, if not a link remove and link
	if [ ! -h /etc/default/skywire ] ; then
		# not a link, remove it and link
		rm /etc/default/skywire
		ln -s ${SKYWIRE_UNIX_SCRIPTS}/skywire.defaults /etc/default/skywire
	fi
fi

# modify the skywire config to point to the right manager
echo "Setting the manager IP"
cat /etc/default/skywire | grep -v "MANAGER_IP" | \
	sed s/"it system wide."/'it system wide.\n'"MANAGER_IP=$MIP"/ \
	> /tmp/skywire.default
cp -f /tmp/skywire.default $SKYWIRE_UNIX_SCRIPTS/skywire.defaults


# manager or a node? and setup/start the services
if [ "$MODE" == "manager" ] ; then
    # we are on a manager
	echo "Starting Skywire as a manager"
	# setup & start
	systemctl enable skywire-manager.services
	systemctl stop skywire-node.services
	systemctl disable skywire-node.services
	# short pause
	sleep 2
	# start as needed
	systemctl start skywire-manager.services
else
    # we are on a node
	echo "Starting Skywire as a node"
	# setup & start
	systemctl enable skywire-node.services
	systemctl stop skywire-manager.services
	systemctl disable skywire-manager.services
	# short pause
	sleep 2
	# start as needed
	systemctl start skywire-node.services
fi
